// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: AllWidgetDataNotify.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Weedwacker.Shared.Network.Proto {

  /// <summary>Holder for reflection information generated from AllWidgetDataNotify.proto</summary>
  public static partial class AllWidgetDataNotifyReflection {

    #region Descriptor
    /// <summary>File descriptor for AllWidgetDataNotify.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AllWidgetDataNotifyReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlBbGxXaWRnZXREYXRhTm90aWZ5LnByb3RvEh9XZWVkd2Fja2VyLlNoYXJl",
            "ZC5OZXR3b3JrLlByb3RvGhVBbmNob3JQb2ludERhdGEucHJvdG8aGUNsaWVu",
            "dENvbGxlY3RvckRhdGEucHJvdG8aEkx1bmNoQm94RGF0YS5wcm90bxojT25l",
            "b2ZmR2F0aGVyUG9pbnREZXRlY3RvckRhdGEucHJvdG8aHFNreUNyeXN0YWxE",
            "ZXRlY3RvckRhdGEucHJvdG8aF1dlYXRoZXJXaXphcmREYXRhLnByb3RvGhhX",
            "aWRnZXRDb29sRG93bkRhdGEucHJvdG8aFFdpZGdldFNsb3REYXRhLnByb3Rv",
            "IuMGChNBbGxXaWRnZXREYXRhTm90aWZ5EiUKHW5leHRfYW5jaG9yX3BvaW50",
            "X3VzYWJsZV90aW1lGAUgASgNEkUKDmx1bmNoX2JveF9kYXRhGAEgASgLMi0u",
            "V2VlZHdhY2tlci5TaGFyZWQuTmV0d29yay5Qcm90by5MdW5jaEJveERhdGES",
            "bgomb25lb2ZmX2dhdGhlcl9wb2ludF9kZXRlY3Rvcl9kYXRhX2xpc3QYDiAD",
            "KAsyPi5XZWVkd2Fja2VyLlNoYXJlZC5OZXR3b3JrLlByb3RvLk9uZW9mZkdh",
            "dGhlclBvaW50RGV0ZWN0b3JEYXRhEkIKCXNsb3RfbGlzdBgGIAMoCzIvLldl",
            "ZWR3YWNrZXIuU2hhcmVkLk5ldHdvcmsuUHJvdG8uV2lkZ2V0U2xvdERhdGES",
            "JQodYmFja2dyb3VuZF9hY3RpdmVfd2lkZ2V0X2xpc3QYCSADKA0SVgoZY29v",
            "bF9kb3duX2dyb3VwX2RhdGFfbGlzdBgDIAMoCzIzLldlZWR3YWNrZXIuU2hh",
            "cmVkLk5ldHdvcmsuUHJvdG8uV2lkZ2V0Q29vbERvd25EYXRhEloKGXNreV9j",
            "cnlzdGFsX2RldGVjdG9yX2RhdGEYBCABKAsyNy5XZWVkd2Fja2VyLlNoYXJl",
            "ZC5OZXR3b3JrLlByb3RvLlNreUNyeXN0YWxEZXRlY3RvckRhdGESWAoaY2xp",
            "ZW50X2NvbGxlY3Rvcl9kYXRhX2xpc3QYByADKAsyNC5XZWVkd2Fja2VyLlNo",
            "YXJlZC5OZXR3b3JrLlByb3RvLkNsaWVudENvbGxlY3RvckRhdGESTwoTd2Vh",
            "dGhlcl93aXphcmRfZGF0YRgPIAEoCzIyLldlZWR3YWNrZXIuU2hhcmVkLk5l",
            "dHdvcmsuUHJvdG8uV2VhdGhlcldpemFyZERhdGESVwoabm9ybWFsX2Nvb2xf",
            "ZG93bl9kYXRhX2xpc3QYCiADKAsyMy5XZWVkd2Fja2VyLlNoYXJlZC5OZXR3",
            "b3JrLlByb3RvLldpZGdldENvb2xEb3duRGF0YRJLChFhbmNob3JfcG9pbnRf",
            "bGlzdBgNIAMoCzIwLldlZWR3YWNrZXIuU2hhcmVkLk5ldHdvcmsuUHJvdG8u",
            "QW5jaG9yUG9pbnREYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Weedwacker.Shared.Network.Proto.AnchorPointDataReflection.Descriptor, global::Weedwacker.Shared.Network.Proto.ClientCollectorDataReflection.Descriptor, global::Weedwacker.Shared.Network.Proto.LunchBoxDataReflection.Descriptor, global::Weedwacker.Shared.Network.Proto.OneoffGatherPointDetectorDataReflection.Descriptor, global::Weedwacker.Shared.Network.Proto.SkyCrystalDetectorDataReflection.Descriptor, global::Weedwacker.Shared.Network.Proto.WeatherWizardDataReflection.Descriptor, global::Weedwacker.Shared.Network.Proto.WidgetCoolDownDataReflection.Descriptor, global::Weedwacker.Shared.Network.Proto.WidgetSlotDataReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Weedwacker.Shared.Network.Proto.AllWidgetDataNotify), global::Weedwacker.Shared.Network.Proto.AllWidgetDataNotify.Parser, new[]{ "NextAnchorPointUsableTime", "LunchBoxData", "OneoffGatherPointDetectorDataList", "SlotList", "BackgroundActiveWidgetList", "CoolDownGroupDataList", "SkyCrystalDetectorData", "ClientCollectorDataList", "WeatherWizardData", "NormalCoolDownDataList", "AnchorPointList" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// enum CmdId {
  ///   option allow_alias = true;
  ///   NONE = 0;
  ///   CMD_ID = 4286;
  ///   ENET_CHANNEL_ID = 0;
  ///   ENET_IS_RELIABLE = 1;
  /// }
  /// </summary>
  public sealed partial class AllWidgetDataNotify : pb::IMessage<AllWidgetDataNotify>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AllWidgetDataNotify> _parser = new pb::MessageParser<AllWidgetDataNotify>(() => new AllWidgetDataNotify());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AllWidgetDataNotify> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Weedwacker.Shared.Network.Proto.AllWidgetDataNotifyReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AllWidgetDataNotify() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AllWidgetDataNotify(AllWidgetDataNotify other) : this() {
      nextAnchorPointUsableTime_ = other.nextAnchorPointUsableTime_;
      lunchBoxData_ = other.lunchBoxData_ != null ? other.lunchBoxData_.Clone() : null;
      oneoffGatherPointDetectorDataList_ = other.oneoffGatherPointDetectorDataList_.Clone();
      slotList_ = other.slotList_.Clone();
      backgroundActiveWidgetList_ = other.backgroundActiveWidgetList_.Clone();
      coolDownGroupDataList_ = other.coolDownGroupDataList_.Clone();
      skyCrystalDetectorData_ = other.skyCrystalDetectorData_ != null ? other.skyCrystalDetectorData_.Clone() : null;
      clientCollectorDataList_ = other.clientCollectorDataList_.Clone();
      weatherWizardData_ = other.weatherWizardData_ != null ? other.weatherWizardData_.Clone() : null;
      normalCoolDownDataList_ = other.normalCoolDownDataList_.Clone();
      anchorPointList_ = other.anchorPointList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AllWidgetDataNotify Clone() {
      return new AllWidgetDataNotify(this);
    }

    /// <summary>Field number for the "next_anchor_point_usable_time" field.</summary>
    public const int NextAnchorPointUsableTimeFieldNumber = 5;
    private uint nextAnchorPointUsableTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NextAnchorPointUsableTime {
      get { return nextAnchorPointUsableTime_; }
      set {
        nextAnchorPointUsableTime_ = value;
      }
    }

    /// <summary>Field number for the "lunch_box_data" field.</summary>
    public const int LunchBoxDataFieldNumber = 1;
    private global::Weedwacker.Shared.Network.Proto.LunchBoxData lunchBoxData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Weedwacker.Shared.Network.Proto.LunchBoxData LunchBoxData {
      get { return lunchBoxData_; }
      set {
        lunchBoxData_ = value;
      }
    }

    /// <summary>Field number for the "oneoff_gather_point_detector_data_list" field.</summary>
    public const int OneoffGatherPointDetectorDataListFieldNumber = 14;
    private static readonly pb::FieldCodec<global::Weedwacker.Shared.Network.Proto.OneoffGatherPointDetectorData> _repeated_oneoffGatherPointDetectorDataList_codec
        = pb::FieldCodec.ForMessage(114, global::Weedwacker.Shared.Network.Proto.OneoffGatherPointDetectorData.Parser);
    private readonly pbc::RepeatedField<global::Weedwacker.Shared.Network.Proto.OneoffGatherPointDetectorData> oneoffGatherPointDetectorDataList_ = new pbc::RepeatedField<global::Weedwacker.Shared.Network.Proto.OneoffGatherPointDetectorData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Weedwacker.Shared.Network.Proto.OneoffGatherPointDetectorData> OneoffGatherPointDetectorDataList {
      get { return oneoffGatherPointDetectorDataList_; }
    }

    /// <summary>Field number for the "slot_list" field.</summary>
    public const int SlotListFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Weedwacker.Shared.Network.Proto.WidgetSlotData> _repeated_slotList_codec
        = pb::FieldCodec.ForMessage(50, global::Weedwacker.Shared.Network.Proto.WidgetSlotData.Parser);
    private readonly pbc::RepeatedField<global::Weedwacker.Shared.Network.Proto.WidgetSlotData> slotList_ = new pbc::RepeatedField<global::Weedwacker.Shared.Network.Proto.WidgetSlotData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Weedwacker.Shared.Network.Proto.WidgetSlotData> SlotList {
      get { return slotList_; }
    }

    /// <summary>Field number for the "background_active_widget_list" field.</summary>
    public const int BackgroundActiveWidgetListFieldNumber = 9;
    private static readonly pb::FieldCodec<uint> _repeated_backgroundActiveWidgetList_codec
        = pb::FieldCodec.ForUInt32(74);
    private readonly pbc::RepeatedField<uint> backgroundActiveWidgetList_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> BackgroundActiveWidgetList {
      get { return backgroundActiveWidgetList_; }
    }

    /// <summary>Field number for the "cool_down_group_data_list" field.</summary>
    public const int CoolDownGroupDataListFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Weedwacker.Shared.Network.Proto.WidgetCoolDownData> _repeated_coolDownGroupDataList_codec
        = pb::FieldCodec.ForMessage(26, global::Weedwacker.Shared.Network.Proto.WidgetCoolDownData.Parser);
    private readonly pbc::RepeatedField<global::Weedwacker.Shared.Network.Proto.WidgetCoolDownData> coolDownGroupDataList_ = new pbc::RepeatedField<global::Weedwacker.Shared.Network.Proto.WidgetCoolDownData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Weedwacker.Shared.Network.Proto.WidgetCoolDownData> CoolDownGroupDataList {
      get { return coolDownGroupDataList_; }
    }

    /// <summary>Field number for the "sky_crystal_detector_data" field.</summary>
    public const int SkyCrystalDetectorDataFieldNumber = 4;
    private global::Weedwacker.Shared.Network.Proto.SkyCrystalDetectorData skyCrystalDetectorData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Weedwacker.Shared.Network.Proto.SkyCrystalDetectorData SkyCrystalDetectorData {
      get { return skyCrystalDetectorData_; }
      set {
        skyCrystalDetectorData_ = value;
      }
    }

    /// <summary>Field number for the "client_collector_data_list" field.</summary>
    public const int ClientCollectorDataListFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Weedwacker.Shared.Network.Proto.ClientCollectorData> _repeated_clientCollectorDataList_codec
        = pb::FieldCodec.ForMessage(58, global::Weedwacker.Shared.Network.Proto.ClientCollectorData.Parser);
    private readonly pbc::RepeatedField<global::Weedwacker.Shared.Network.Proto.ClientCollectorData> clientCollectorDataList_ = new pbc::RepeatedField<global::Weedwacker.Shared.Network.Proto.ClientCollectorData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Weedwacker.Shared.Network.Proto.ClientCollectorData> ClientCollectorDataList {
      get { return clientCollectorDataList_; }
    }

    /// <summary>Field number for the "weather_wizard_data" field.</summary>
    public const int WeatherWizardDataFieldNumber = 15;
    private global::Weedwacker.Shared.Network.Proto.WeatherWizardData weatherWizardData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Weedwacker.Shared.Network.Proto.WeatherWizardData WeatherWizardData {
      get { return weatherWizardData_; }
      set {
        weatherWizardData_ = value;
      }
    }

    /// <summary>Field number for the "normal_cool_down_data_list" field.</summary>
    public const int NormalCoolDownDataListFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Weedwacker.Shared.Network.Proto.WidgetCoolDownData> _repeated_normalCoolDownDataList_codec
        = pb::FieldCodec.ForMessage(82, global::Weedwacker.Shared.Network.Proto.WidgetCoolDownData.Parser);
    private readonly pbc::RepeatedField<global::Weedwacker.Shared.Network.Proto.WidgetCoolDownData> normalCoolDownDataList_ = new pbc::RepeatedField<global::Weedwacker.Shared.Network.Proto.WidgetCoolDownData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Weedwacker.Shared.Network.Proto.WidgetCoolDownData> NormalCoolDownDataList {
      get { return normalCoolDownDataList_; }
    }

    /// <summary>Field number for the "anchor_point_list" field.</summary>
    public const int AnchorPointListFieldNumber = 13;
    private static readonly pb::FieldCodec<global::Weedwacker.Shared.Network.Proto.AnchorPointData> _repeated_anchorPointList_codec
        = pb::FieldCodec.ForMessage(106, global::Weedwacker.Shared.Network.Proto.AnchorPointData.Parser);
    private readonly pbc::RepeatedField<global::Weedwacker.Shared.Network.Proto.AnchorPointData> anchorPointList_ = new pbc::RepeatedField<global::Weedwacker.Shared.Network.Proto.AnchorPointData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Weedwacker.Shared.Network.Proto.AnchorPointData> AnchorPointList {
      get { return anchorPointList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AllWidgetDataNotify);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AllWidgetDataNotify other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NextAnchorPointUsableTime != other.NextAnchorPointUsableTime) return false;
      if (!object.Equals(LunchBoxData, other.LunchBoxData)) return false;
      if(!oneoffGatherPointDetectorDataList_.Equals(other.oneoffGatherPointDetectorDataList_)) return false;
      if(!slotList_.Equals(other.slotList_)) return false;
      if(!backgroundActiveWidgetList_.Equals(other.backgroundActiveWidgetList_)) return false;
      if(!coolDownGroupDataList_.Equals(other.coolDownGroupDataList_)) return false;
      if (!object.Equals(SkyCrystalDetectorData, other.SkyCrystalDetectorData)) return false;
      if(!clientCollectorDataList_.Equals(other.clientCollectorDataList_)) return false;
      if (!object.Equals(WeatherWizardData, other.WeatherWizardData)) return false;
      if(!normalCoolDownDataList_.Equals(other.normalCoolDownDataList_)) return false;
      if(!anchorPointList_.Equals(other.anchorPointList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (NextAnchorPointUsableTime != 0) hash ^= NextAnchorPointUsableTime.GetHashCode();
      if (lunchBoxData_ != null) hash ^= LunchBoxData.GetHashCode();
      hash ^= oneoffGatherPointDetectorDataList_.GetHashCode();
      hash ^= slotList_.GetHashCode();
      hash ^= backgroundActiveWidgetList_.GetHashCode();
      hash ^= coolDownGroupDataList_.GetHashCode();
      if (skyCrystalDetectorData_ != null) hash ^= SkyCrystalDetectorData.GetHashCode();
      hash ^= clientCollectorDataList_.GetHashCode();
      if (weatherWizardData_ != null) hash ^= WeatherWizardData.GetHashCode();
      hash ^= normalCoolDownDataList_.GetHashCode();
      hash ^= anchorPointList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (lunchBoxData_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LunchBoxData);
      }
      coolDownGroupDataList_.WriteTo(output, _repeated_coolDownGroupDataList_codec);
      if (skyCrystalDetectorData_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(SkyCrystalDetectorData);
      }
      if (NextAnchorPointUsableTime != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(NextAnchorPointUsableTime);
      }
      slotList_.WriteTo(output, _repeated_slotList_codec);
      clientCollectorDataList_.WriteTo(output, _repeated_clientCollectorDataList_codec);
      backgroundActiveWidgetList_.WriteTo(output, _repeated_backgroundActiveWidgetList_codec);
      normalCoolDownDataList_.WriteTo(output, _repeated_normalCoolDownDataList_codec);
      anchorPointList_.WriteTo(output, _repeated_anchorPointList_codec);
      oneoffGatherPointDetectorDataList_.WriteTo(output, _repeated_oneoffGatherPointDetectorDataList_codec);
      if (weatherWizardData_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(WeatherWizardData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (lunchBoxData_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LunchBoxData);
      }
      coolDownGroupDataList_.WriteTo(ref output, _repeated_coolDownGroupDataList_codec);
      if (skyCrystalDetectorData_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(SkyCrystalDetectorData);
      }
      if (NextAnchorPointUsableTime != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(NextAnchorPointUsableTime);
      }
      slotList_.WriteTo(ref output, _repeated_slotList_codec);
      clientCollectorDataList_.WriteTo(ref output, _repeated_clientCollectorDataList_codec);
      backgroundActiveWidgetList_.WriteTo(ref output, _repeated_backgroundActiveWidgetList_codec);
      normalCoolDownDataList_.WriteTo(ref output, _repeated_normalCoolDownDataList_codec);
      anchorPointList_.WriteTo(ref output, _repeated_anchorPointList_codec);
      oneoffGatherPointDetectorDataList_.WriteTo(ref output, _repeated_oneoffGatherPointDetectorDataList_codec);
      if (weatherWizardData_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(WeatherWizardData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (NextAnchorPointUsableTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NextAnchorPointUsableTime);
      }
      if (lunchBoxData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LunchBoxData);
      }
      size += oneoffGatherPointDetectorDataList_.CalculateSize(_repeated_oneoffGatherPointDetectorDataList_codec);
      size += slotList_.CalculateSize(_repeated_slotList_codec);
      size += backgroundActiveWidgetList_.CalculateSize(_repeated_backgroundActiveWidgetList_codec);
      size += coolDownGroupDataList_.CalculateSize(_repeated_coolDownGroupDataList_codec);
      if (skyCrystalDetectorData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SkyCrystalDetectorData);
      }
      size += clientCollectorDataList_.CalculateSize(_repeated_clientCollectorDataList_codec);
      if (weatherWizardData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WeatherWizardData);
      }
      size += normalCoolDownDataList_.CalculateSize(_repeated_normalCoolDownDataList_codec);
      size += anchorPointList_.CalculateSize(_repeated_anchorPointList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AllWidgetDataNotify other) {
      if (other == null) {
        return;
      }
      if (other.NextAnchorPointUsableTime != 0) {
        NextAnchorPointUsableTime = other.NextAnchorPointUsableTime;
      }
      if (other.lunchBoxData_ != null) {
        if (lunchBoxData_ == null) {
          LunchBoxData = new global::Weedwacker.Shared.Network.Proto.LunchBoxData();
        }
        LunchBoxData.MergeFrom(other.LunchBoxData);
      }
      oneoffGatherPointDetectorDataList_.Add(other.oneoffGatherPointDetectorDataList_);
      slotList_.Add(other.slotList_);
      backgroundActiveWidgetList_.Add(other.backgroundActiveWidgetList_);
      coolDownGroupDataList_.Add(other.coolDownGroupDataList_);
      if (other.skyCrystalDetectorData_ != null) {
        if (skyCrystalDetectorData_ == null) {
          SkyCrystalDetectorData = new global::Weedwacker.Shared.Network.Proto.SkyCrystalDetectorData();
        }
        SkyCrystalDetectorData.MergeFrom(other.SkyCrystalDetectorData);
      }
      clientCollectorDataList_.Add(other.clientCollectorDataList_);
      if (other.weatherWizardData_ != null) {
        if (weatherWizardData_ == null) {
          WeatherWizardData = new global::Weedwacker.Shared.Network.Proto.WeatherWizardData();
        }
        WeatherWizardData.MergeFrom(other.WeatherWizardData);
      }
      normalCoolDownDataList_.Add(other.normalCoolDownDataList_);
      anchorPointList_.Add(other.anchorPointList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (lunchBoxData_ == null) {
              LunchBoxData = new global::Weedwacker.Shared.Network.Proto.LunchBoxData();
            }
            input.ReadMessage(LunchBoxData);
            break;
          }
          case 26: {
            coolDownGroupDataList_.AddEntriesFrom(input, _repeated_coolDownGroupDataList_codec);
            break;
          }
          case 34: {
            if (skyCrystalDetectorData_ == null) {
              SkyCrystalDetectorData = new global::Weedwacker.Shared.Network.Proto.SkyCrystalDetectorData();
            }
            input.ReadMessage(SkyCrystalDetectorData);
            break;
          }
          case 40: {
            NextAnchorPointUsableTime = input.ReadUInt32();
            break;
          }
          case 50: {
            slotList_.AddEntriesFrom(input, _repeated_slotList_codec);
            break;
          }
          case 58: {
            clientCollectorDataList_.AddEntriesFrom(input, _repeated_clientCollectorDataList_codec);
            break;
          }
          case 74:
          case 72: {
            backgroundActiveWidgetList_.AddEntriesFrom(input, _repeated_backgroundActiveWidgetList_codec);
            break;
          }
          case 82: {
            normalCoolDownDataList_.AddEntriesFrom(input, _repeated_normalCoolDownDataList_codec);
            break;
          }
          case 106: {
            anchorPointList_.AddEntriesFrom(input, _repeated_anchorPointList_codec);
            break;
          }
          case 114: {
            oneoffGatherPointDetectorDataList_.AddEntriesFrom(input, _repeated_oneoffGatherPointDetectorDataList_codec);
            break;
          }
          case 122: {
            if (weatherWizardData_ == null) {
              WeatherWizardData = new global::Weedwacker.Shared.Network.Proto.WeatherWizardData();
            }
            input.ReadMessage(WeatherWizardData);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (lunchBoxData_ == null) {
              LunchBoxData = new global::Weedwacker.Shared.Network.Proto.LunchBoxData();
            }
            input.ReadMessage(LunchBoxData);
            break;
          }
          case 26: {
            coolDownGroupDataList_.AddEntriesFrom(ref input, _repeated_coolDownGroupDataList_codec);
            break;
          }
          case 34: {
            if (skyCrystalDetectorData_ == null) {
              SkyCrystalDetectorData = new global::Weedwacker.Shared.Network.Proto.SkyCrystalDetectorData();
            }
            input.ReadMessage(SkyCrystalDetectorData);
            break;
          }
          case 40: {
            NextAnchorPointUsableTime = input.ReadUInt32();
            break;
          }
          case 50: {
            slotList_.AddEntriesFrom(ref input, _repeated_slotList_codec);
            break;
          }
          case 58: {
            clientCollectorDataList_.AddEntriesFrom(ref input, _repeated_clientCollectorDataList_codec);
            break;
          }
          case 74:
          case 72: {
            backgroundActiveWidgetList_.AddEntriesFrom(ref input, _repeated_backgroundActiveWidgetList_codec);
            break;
          }
          case 82: {
            normalCoolDownDataList_.AddEntriesFrom(ref input, _repeated_normalCoolDownDataList_codec);
            break;
          }
          case 106: {
            anchorPointList_.AddEntriesFrom(ref input, _repeated_anchorPointList_codec);
            break;
          }
          case 114: {
            oneoffGatherPointDetectorDataList_.AddEntriesFrom(ref input, _repeated_oneoffGatherPointDetectorDataList_codec);
            break;
          }
          case 122: {
            if (weatherWizardData_ == null) {
              WeatherWizardData = new global::Weedwacker.Shared.Network.Proto.WeatherWizardData();
            }
            input.ReadMessage(WeatherWizardData);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
