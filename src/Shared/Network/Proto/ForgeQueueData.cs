// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ForgeQueueData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Weedwacker.Shared.Network.Proto {

  /// <summary>Holder for reflection information generated from ForgeQueueData.proto</summary>
  public static partial class ForgeQueueDataReflection {

    #region Descriptor
    /// <summary>File descriptor for ForgeQueueData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ForgeQueueDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRGb3JnZVF1ZXVlRGF0YS5wcm90bxIfV2VlZHdhY2tlci5TaGFyZWQuTmV0",
            "d29yay5Qcm90byK0AQoORm9yZ2VRdWV1ZURhdGESEAoIcXVldWVfaWQYASAB",
            "KA0SEAoIZm9yZ2VfaWQYBSABKA0SFAoMZmluaXNoX2NvdW50GAcgASgNEhYK",
            "DnVuZmluaXNoX2NvdW50GAQgASgNEh4KFnRvdGFsX2ZpbmlzaF90aW1lc3Rh",
            "bXAYDyABKA0SEQoJYXZhdGFyX2lkGAwgASgNEh0KFW5leHRfZmluaXNoX3Rp",
            "bWVzdGFtcBgDIAEoDWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Weedwacker.Shared.Network.Proto.ForgeQueueData), global::Weedwacker.Shared.Network.Proto.ForgeQueueData.Parser, new[]{ "QueueId", "ForgeId", "FinishCount", "UnfinishCount", "TotalFinishTimestamp", "AvatarId", "NextFinishTimestamp" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ForgeQueueData : pb::IMessage<ForgeQueueData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ForgeQueueData> _parser = new pb::MessageParser<ForgeQueueData>(() => new ForgeQueueData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ForgeQueueData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Weedwacker.Shared.Network.Proto.ForgeQueueDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ForgeQueueData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ForgeQueueData(ForgeQueueData other) : this() {
      queueId_ = other.queueId_;
      forgeId_ = other.forgeId_;
      finishCount_ = other.finishCount_;
      unfinishCount_ = other.unfinishCount_;
      totalFinishTimestamp_ = other.totalFinishTimestamp_;
      avatarId_ = other.avatarId_;
      nextFinishTimestamp_ = other.nextFinishTimestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ForgeQueueData Clone() {
      return new ForgeQueueData(this);
    }

    /// <summary>Field number for the "queue_id" field.</summary>
    public const int QueueIdFieldNumber = 1;
    private uint queueId_;
    /// <summary>
    /// Unk3300_KDIPLNBHGDH
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint QueueId {
      get { return queueId_; }
      set {
        queueId_ = value;
      }
    }

    /// <summary>Field number for the "forge_id" field.</summary>
    public const int ForgeIdFieldNumber = 5;
    private uint forgeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ForgeId {
      get { return forgeId_; }
      set {
        forgeId_ = value;
      }
    }

    /// <summary>Field number for the "finish_count" field.</summary>
    public const int FinishCountFieldNumber = 7;
    private uint finishCount_;
    /// <summary>
    /// Unk3300_GJEECHKDEBD
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FinishCount {
      get { return finishCount_; }
      set {
        finishCount_ = value;
      }
    }

    /// <summary>Field number for the "unfinish_count" field.</summary>
    public const int UnfinishCountFieldNumber = 4;
    private uint unfinishCount_;
    /// <summary>
    /// Unk3300_OOOJNABGHOM
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint UnfinishCount {
      get { return unfinishCount_; }
      set {
        unfinishCount_ = value;
      }
    }

    /// <summary>Field number for the "total_finish_timestamp" field.</summary>
    public const int TotalFinishTimestampFieldNumber = 15;
    private uint totalFinishTimestamp_;
    /// <summary>
    /// Unk3300_PJCKFNNIMNM
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TotalFinishTimestamp {
      get { return totalFinishTimestamp_; }
      set {
        totalFinishTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "avatar_id" field.</summary>
    public const int AvatarIdFieldNumber = 12;
    private uint avatarId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AvatarId {
      get { return avatarId_; }
      set {
        avatarId_ = value;
      }
    }

    /// <summary>Field number for the "next_finish_timestamp" field.</summary>
    public const int NextFinishTimestampFieldNumber = 3;
    private uint nextFinishTimestamp_;
    /// <summary>
    /// Unk3300_PJKHPCIMAID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NextFinishTimestamp {
      get { return nextFinishTimestamp_; }
      set {
        nextFinishTimestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ForgeQueueData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ForgeQueueData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QueueId != other.QueueId) return false;
      if (ForgeId != other.ForgeId) return false;
      if (FinishCount != other.FinishCount) return false;
      if (UnfinishCount != other.UnfinishCount) return false;
      if (TotalFinishTimestamp != other.TotalFinishTimestamp) return false;
      if (AvatarId != other.AvatarId) return false;
      if (NextFinishTimestamp != other.NextFinishTimestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (QueueId != 0) hash ^= QueueId.GetHashCode();
      if (ForgeId != 0) hash ^= ForgeId.GetHashCode();
      if (FinishCount != 0) hash ^= FinishCount.GetHashCode();
      if (UnfinishCount != 0) hash ^= UnfinishCount.GetHashCode();
      if (TotalFinishTimestamp != 0) hash ^= TotalFinishTimestamp.GetHashCode();
      if (AvatarId != 0) hash ^= AvatarId.GetHashCode();
      if (NextFinishTimestamp != 0) hash ^= NextFinishTimestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (QueueId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(QueueId);
      }
      if (NextFinishTimestamp != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(NextFinishTimestamp);
      }
      if (UnfinishCount != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(UnfinishCount);
      }
      if (ForgeId != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(ForgeId);
      }
      if (FinishCount != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(FinishCount);
      }
      if (AvatarId != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(AvatarId);
      }
      if (TotalFinishTimestamp != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(TotalFinishTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (QueueId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(QueueId);
      }
      if (NextFinishTimestamp != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(NextFinishTimestamp);
      }
      if (UnfinishCount != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(UnfinishCount);
      }
      if (ForgeId != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(ForgeId);
      }
      if (FinishCount != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(FinishCount);
      }
      if (AvatarId != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(AvatarId);
      }
      if (TotalFinishTimestamp != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(TotalFinishTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (QueueId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(QueueId);
      }
      if (ForgeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ForgeId);
      }
      if (FinishCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FinishCount);
      }
      if (UnfinishCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnfinishCount);
      }
      if (TotalFinishTimestamp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalFinishTimestamp);
      }
      if (AvatarId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AvatarId);
      }
      if (NextFinishTimestamp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NextFinishTimestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ForgeQueueData other) {
      if (other == null) {
        return;
      }
      if (other.QueueId != 0) {
        QueueId = other.QueueId;
      }
      if (other.ForgeId != 0) {
        ForgeId = other.ForgeId;
      }
      if (other.FinishCount != 0) {
        FinishCount = other.FinishCount;
      }
      if (other.UnfinishCount != 0) {
        UnfinishCount = other.UnfinishCount;
      }
      if (other.TotalFinishTimestamp != 0) {
        TotalFinishTimestamp = other.TotalFinishTimestamp;
      }
      if (other.AvatarId != 0) {
        AvatarId = other.AvatarId;
      }
      if (other.NextFinishTimestamp != 0) {
        NextFinishTimestamp = other.NextFinishTimestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            QueueId = input.ReadUInt32();
            break;
          }
          case 24: {
            NextFinishTimestamp = input.ReadUInt32();
            break;
          }
          case 32: {
            UnfinishCount = input.ReadUInt32();
            break;
          }
          case 40: {
            ForgeId = input.ReadUInt32();
            break;
          }
          case 56: {
            FinishCount = input.ReadUInt32();
            break;
          }
          case 96: {
            AvatarId = input.ReadUInt32();
            break;
          }
          case 120: {
            TotalFinishTimestamp = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            QueueId = input.ReadUInt32();
            break;
          }
          case 24: {
            NextFinishTimestamp = input.ReadUInt32();
            break;
          }
          case 32: {
            UnfinishCount = input.ReadUInt32();
            break;
          }
          case 40: {
            ForgeId = input.ReadUInt32();
            break;
          }
          case 56: {
            FinishCount = input.ReadUInt32();
            break;
          }
          case 96: {
            AvatarId = input.ReadUInt32();
            break;
          }
          case 120: {
            TotalFinishTimestamp = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
