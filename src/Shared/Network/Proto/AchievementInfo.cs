// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: AchievementInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Weedwacker.Shared.Network.Proto {

  /// <summary>Holder for reflection information generated from AchievementInfo.proto</summary>
  public static partial class AchievementInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for AchievementInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AchievementInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVBY2hpZXZlbWVudEluZm8ucHJvdG8SH1dlZWR3YWNrZXIuU2hhcmVkLk5l",
            "dHdvcmsuUHJvdG8irwIKD0FjaGlldmVtZW50SW5mbxIKCgJpZBgBIAEoDRJW",
            "CgZzdGF0dXMYAiABKA4yRi5XZWVkd2Fja2VyLlNoYXJlZC5OZXR3b3JrLlBy",
            "b3RvLkFjaGlldmVtZW50SW5mby5BY2hpZXZlbWVudEluZm9TdGF0dXMSDwoH",
            "Y3VycmVudBgDIAEoDRIMCgRnb2FsGAQgASgNEhMKC2FjaGlldmVkYXRlGAUg",
            "ASgNIoMBChVBY2hpZXZlbWVudEluZm9TdGF0dXMSFwoTQUNISUVWRU1FTlRf",
            "SU5WQUxJRBAAEhoKFkFDSElFVkVNRU5UX1VORklOSVNIRUQQARIYChRBQ0hJ",
            "RVZFTUVOVF9GSU5JU0hFRBACEhsKF0FDSElFVkVNRU5UX1BPSU5UX1RBS0VO",
            "EANiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Weedwacker.Shared.Network.Proto.AchievementInfo), global::Weedwacker.Shared.Network.Proto.AchievementInfo.Parser, new[]{ "Id", "Status", "Current", "Goal", "Achievedate" }, null, new[]{ typeof(global::Weedwacker.Shared.Network.Proto.AchievementInfo.Types.AchievementInfoStatus) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AchievementInfo : pb::IMessage<AchievementInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AchievementInfo> _parser = new pb::MessageParser<AchievementInfo>(() => new AchievementInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AchievementInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Weedwacker.Shared.Network.Proto.AchievementInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AchievementInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AchievementInfo(AchievementInfo other) : this() {
      id_ = other.id_;
      status_ = other.status_;
      current_ = other.current_;
      goal_ = other.goal_;
      achievedate_ = other.achievedate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AchievementInfo Clone() {
      return new AchievementInfo(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::Weedwacker.Shared.Network.Proto.AchievementInfo.Types.AchievementInfoStatus status_ = global::Weedwacker.Shared.Network.Proto.AchievementInfo.Types.AchievementInfoStatus.AchievementInvalid;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Weedwacker.Shared.Network.Proto.AchievementInfo.Types.AchievementInfoStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "current" field.</summary>
    public const int CurrentFieldNumber = 3;
    private uint current_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Current {
      get { return current_; }
      set {
        current_ = value;
      }
    }

    /// <summary>Field number for the "goal" field.</summary>
    public const int GoalFieldNumber = 4;
    private uint goal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Goal {
      get { return goal_; }
      set {
        goal_ = value;
      }
    }

    /// <summary>Field number for the "achievedate" field.</summary>
    public const int AchievedateFieldNumber = 5;
    private uint achievedate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Achievedate {
      get { return achievedate_; }
      set {
        achievedate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AchievementInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AchievementInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Status != other.Status) return false;
      if (Current != other.Current) return false;
      if (Goal != other.Goal) return false;
      if (Achievedate != other.Achievedate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Status != global::Weedwacker.Shared.Network.Proto.AchievementInfo.Types.AchievementInfoStatus.AchievementInvalid) hash ^= Status.GetHashCode();
      if (Current != 0) hash ^= Current.GetHashCode();
      if (Goal != 0) hash ^= Goal.GetHashCode();
      if (Achievedate != 0) hash ^= Achievedate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Status != global::Weedwacker.Shared.Network.Proto.AchievementInfo.Types.AchievementInfoStatus.AchievementInvalid) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (Current != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Current);
      }
      if (Goal != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Goal);
      }
      if (Achievedate != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Achievedate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Status != global::Weedwacker.Shared.Network.Proto.AchievementInfo.Types.AchievementInfoStatus.AchievementInvalid) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (Current != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Current);
      }
      if (Goal != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Goal);
      }
      if (Achievedate != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Achievedate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Status != global::Weedwacker.Shared.Network.Proto.AchievementInfo.Types.AchievementInfoStatus.AchievementInvalid) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (Current != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Current);
      }
      if (Goal != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Goal);
      }
      if (Achievedate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Achievedate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AchievementInfo other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Status != global::Weedwacker.Shared.Network.Proto.AchievementInfo.Types.AchievementInfoStatus.AchievementInvalid) {
        Status = other.Status;
      }
      if (other.Current != 0) {
        Current = other.Current;
      }
      if (other.Goal != 0) {
        Goal = other.Goal;
      }
      if (other.Achievedate != 0) {
        Achievedate = other.Achievedate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Status = (global::Weedwacker.Shared.Network.Proto.AchievementInfo.Types.AchievementInfoStatus) input.ReadEnum();
            break;
          }
          case 24: {
            Current = input.ReadUInt32();
            break;
          }
          case 32: {
            Goal = input.ReadUInt32();
            break;
          }
          case 40: {
            Achievedate = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            Status = (global::Weedwacker.Shared.Network.Proto.AchievementInfo.Types.AchievementInfoStatus) input.ReadEnum();
            break;
          }
          case 24: {
            Current = input.ReadUInt32();
            break;
          }
          case 32: {
            Goal = input.ReadUInt32();
            break;
          }
          case 40: {
            Achievedate = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the AchievementInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AchievementInfoStatus {
        [pbr::OriginalName("ACHIEVEMENT_INVALID")] AchievementInvalid = 0,
        [pbr::OriginalName("ACHIEVEMENT_UNFINISHED")] AchievementUnfinished = 1,
        [pbr::OriginalName("ACHIEVEMENT_FINISHED")] AchievementFinished = 2,
        [pbr::OriginalName("ACHIEVEMENT_POINT_TAKEN")] AchievementPointTaken = 3,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
